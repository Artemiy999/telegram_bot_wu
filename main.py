import os
from flask import Flask, request, jsonify
import telebot
from telebot import types
from threading import Thread
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton('–í—Å—Ç—É–ø–∏—Ç—å –≤ WU SPACE', url='https://t.me/wu_space'),
        types.InlineKeyboardButton('–û —á–µ–º –ø—Ä–æ–µ–∫—Ç?', callback_data='about_project'),
        types.InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Å–æ–±—ã—Ç–∏—è –∏ –∑–∞–ø–∏—Å—å –≤ —á–∞—Ç @artemiy_starodub', url='https://t.me/artemiy_starodub'),
        types.InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', url='https://www.terrastra.net'),
        types.InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å (–º—É–∑—ã–∫–∞ –∏ –æ–±—É—á–µ–Ω–∏–µ) üé∂', url='https://www.instagram.com/artemiy_teaching_valencia_/'),
        types.InlineKeyboardButton('–ú–æ–π –±–ª–æ–≥ –∏ —Ç–µ–º—ã —Ç–µ—Ä–∞–ø–∏–∏ üî•', url='https://www.instagram.com/artemiy_starod_psy'),
        types.InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é –∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è –ª–∏—á–Ω–æ üó£', url='https://t.me/artemiy_starodub')
    )
    return markup

# Callback –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –ø—Ä–æ–µ–∫—Ç–µ"
@bot.callback_query_handler(func=lambda call: call.data == 'about_project')
def about_project_callback(call):
    about_text = (
        "Wu Space ‚Äî —ç—Ç–æ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–æ –∫–æ–º—å—é–Ω–∏—Ç–∏.\n\n"
        "–ó–¥–µ—Å—å —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –¥–µ–ª–∏—Ç—å—Å—è –º—ã—Å–ª—è–º–∏, –∏–¥–µ—è–º–∏ –∏ —á—É–≤—Å—Ç–≤–∞–º–∏, –æ—Ç–∫—Ä—ã—Ç–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤. "
        "–≠—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏—â–µ—Ç –≥–ª—É–±–∏–Ω—É, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
        "–í–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–µ—Ç–∫–∏:\n"
        "‚Äî –ê–Ω–æ–Ω—Å—ã\n‚Äî –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥\n‚Äî –û–±—â–µ–Ω–∏–µ\n\n"
        "Wu Space ‚Äî –ø—Ä–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ —É—á–∞—Å—Ç–∏–µ –∏ –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ —Ç—ã –Ω–µ –æ–¥–∏–Ω."
    )
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, about_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –±–æ—Ç–∞.\n\n–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è –≤–∫–ª–∞–¥–∫—É."
    bot.send_message(message.chat.id, welcome_text, reply_markup=main_menu())

# Webhook-–ø—Ä–∏—ë–º —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Make
@app.route('/send', methods=['POST'])
def send_from_make():
    data = request.get_json()
    text = data.get('text')

    if not text:
        return jsonify({'error': 'Missing \"text\" parameter'}), 400

    try:
        bot.send_message(chat_id=CHAT_ID, text=text)
        return jsonify({'status': 'Message sent'})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

# –ó–∞–ø—É—Å–∫ Flask
def run_flask():
    app.run(host="0.0.0.0", port=5000)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–≤–∞–∂–Ω–æ: –±–µ–∑ polling)
def run_bot():
    from flask import abort

    WEBHOOK_URL = os.getenv("WEBHOOK_URL")
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL + '/webhook')

    @app.route('/webhook', methods=['POST'])
    def webhook():
        if request.headers.get('content-type') == 'application/json':
            json_string = request.get_data().decode('utf-8')
            update = telebot.types.Update.de_json(json_string)
            bot.process_new_updates([update])
            return ''
        else:
            abort(403)

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
if __name__ == '__main__':
    Thread(target=run_flask).start()
    Thread(target=run_bot).start()

import logging
from flask import Flask, request, abort
import telebot

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '8077877232:AAGCKJjE_yNyE-nW2-RxX4PLJ20l6zrsZWA'

# –ü—É–±–ª–∏—á–Ω—ã–π URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –≥–¥–µ –¥–æ—Å—Ç—É–ø–µ–Ω –±–æ—Ç (–æ—Ç Render –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ)
WEBHOOK_URL_BASE = 'https://telegram-bot-wu.onrender.com'
WEBHOOK_URL_PATH = f'/{TOKEN}'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ Flask
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

logging.basicConfig(level=logging.INFO)

# ------------------------
# –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è health check (Render –∏ –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–æ–≥—É—Ç ping-–∏—Ç—å —ç—Ç–æ—Ç URL)
@app.route('/healthz')
def healthz():
    return "OK", 200

# ------------------------
# –û—Å–Ω–æ–≤–Ω–æ–π webhook endpoint, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π Telegram –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
@app.route(WEBHOOK_URL_PATH, methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_str = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_str)
        bot.process_new_updates([update])
        return '', 200
    else:
        abort(403)

# ------------------------
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
def setup_webhook():
    logging.info("Removing existing webhook...")
    bot.remove_webhook()
    full_url = WEBHOOK_URL_BASE + WEBHOOK_URL_PATH
    logging.info(f"Setting webhook to {full_url} ...")
    success = bot.set_webhook(url=full_url)
    if success:
        logging.info("Webhook setup successful")
    else:
        logging.error("Failed to set webhook")

# ------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –±–æ—Ç–∞.\n\n"
        "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è –≤–∫–ª–∞–¥–∫—É:"
    )
    markup = telebot.types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        telebot.types.InlineKeyboardButton('–í—Å—Ç—É–ø–∏—Ç—å –≤ WU SPACE', url='https://t.me/wu_space'),
        telebot.types.InlineKeyboardButton('–û —á–µ–º –ø—Ä–æ–µ–∫—Ç?', callback_data='about_project'),
        telebot.types.InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Å–æ–±—ã—Ç–∏—è –∏ –∑–∞–ø–∏—Å—å –≤ —á–∞—Ç @artemiy_starodub', url='https://t.me/artemiy_starodub'),
        telebot.types.InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', url='https://www.terrastra.net'),
        telebot.types.InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å (–º—É–∑—ã–∫–∞ –∏ –æ–±—É—á–µ–Ω–∏–µ) üé∂', url='https://www.instagram.com/artemiy_teaching_valencia_/'),
        telebot.types.InlineKeyboardButton('–ú–æ–π –±–ª–æ–≥ –∏ —Ç–µ–º—ã —Ç–µ—Ä–∞–ø–∏–∏ üî•', url='https://www.instagram.com/artemiy_starod_psy'),
        telebot.types.InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é –∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è –ª–∏—á–Ω–æ üó£', url='https://t.me/artemiy_starodub')
    )
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query –¥–ª—è "about_project"
@bot.callback_query_handler(func=lambda call: call.data == 'about_project')
def handle_about_project(call):
    about_text = (
        "Wu Space ‚Äî —ç—Ç–æ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–æ –∫–æ–º—å—é–Ω–∏—Ç–∏.\n\n"
        "–ó–¥–µ—Å—å —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –¥–µ–ª–∏—Ç—å—Å—è –º—ã—Å–ª—è–º–∏, –∏–¥–µ—è–º–∏ –∏ —á—É–≤—Å—Ç–≤–∞–º–∏...\n\n"
        "–ï—Å–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ ‚Äî Wu Space –ø—Ä–æ –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ, –Ω–∞—Å—Ç–æ—è—â–µ–µ —É—á–∞—Å—Ç–∏–µ –∏ –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ —Ç—ã –Ω–µ –æ–¥–∏–Ω, –¥–∞–∂–µ –µ—Å–ª–∏ –≤–æ–∫—Ä—É–≥ –±–æ–ª—å—à–æ–π –º–∏—Ä."
    )
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, about_text)

# ------------------------
# –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
if __name__ == '__main__':
    setup_webhook()
    app.run(host='0.0.0.0', port=10000)
